version: "3.9"
services:
  zipkin:
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
  rabbitmq:
    image: rabbitmq
    hostname: rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: quest
      RABBITMQ_DEFAULT_PASS: quest

    ports:
      - "5672:5672"
  service-registry:
    build:
      context: service-registry
    ports:
      - "8761:8761"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider localhost:8761/actuator/health/readiness || exit 1
      interval: 10s
      retries: 5
      start_period: 5s
      timeout: 10s
  config-server:
    build:
      context: config-server
    ports:
      - "8888:8888"
    depends_on:
      service-registry:
        condition: service_healthy
    healthcheck:
      test: wget --no-verbose --tries=1 --spider localhost:8888/actuator/health/readiness || exit 1
      interval: 10s
      retries: 5
      start_period: 5s
      timeout: 10s
  department-db:
    image: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_DB: department_db
    ports:
      - "5432:5432"
    restart: unless-stopped
  department-service:
    build:
      context: department-service
    restart: always
    ports:
      - "8081:8080"
    depends_on:
      department-db:
        condition: service_started
      service-registry:
        condition: service_started
      config-server:
        condition: service_healthy
  employee-db:
    image: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_DB: employee_db
    ports:
      - "5433:5432"
    restart: unless-stopped
  employee-service:
    build:
      context: employee-service
    restart: always
    ports:
      - "8082:8080"
    depends_on:
      employee-db:
        condition: service_started
      service-registry:
        condition: service_started
      config-server:
        condition: service_healthy

  organization-db:
    image: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_DB: organization_db
    ports:
      - "5434:5432"
    restart: unless-stopped
  organization-service:
    build:
      context: organization-service
    restart: always
    ports:
      - "8083:8080"
    depends_on:
      employee-db:
        condition: service_started
      service-registry:
        condition: service_started
      config-server:
        condition: service_healthy

  api-gateway:
    build:
      context: api-gateway
    ports:
      - "9191:9191"
    depends_on:
      service-registry:
        condition: service_healthy
      config-server:
        condition: service_healthy

#  frontend:
#    build:
#      context: react-frontend
#    ports:
#      - "8080:3000"